/////////////////////////////////////                                           
//                                 //                                           
// Looper.h                        //                                           
// Author: Matthew Kenzie          //                                           
// Auto-generated                  //                                           
// Essentially a wrapper for TTree //                                           
//                                 //                                           
/////////////////////////////////////                                           
                                                                                
#ifndef Looper_h                                                                
#define Looper_h                                                                
                                                                                
#include <iostream>                                                             
#include <cassert>                                                              
#include "TChain.h"                                                             
#include "TTree.h"                                                              
#include "TBranch.h"                                                            
#include "TFile.h"                                                              
#include "TString.h"                                                            
                                                                                
#include "../interface/BranchDef.h"                                             
                                                                                
struct TreeContainer {                                                          
	TTree *tree;                                                                  
	TString name;                                                                 
	Long64_t nentries;                                                            
	int itype;                                                                    
	int sqrts;                                                                    
};                                                                              
                                                                                
class BranchDef; // just let Looper know that BranchDef exists                  
                                                                                
class Looper {                                                                  
                                                                                
	friend class BranchDef;                                                       
                                                                                
	public:                                                                       
                                                                                
		Looper(TTree *_outTree, BranchDef *_branchDefClass, TString _name="Looper");
		~Looper();                                                                  
                                                                                
		// functions                                                                
		void addTreeContainer(TTree *tree, TString _name, int _itype, int _sqrts);  
		void loadTree(int i);                                                       
		void setOutputBranches();                                                   
		inline void setFirstEntry(Long64_t ent) { firstEntry = ent; }               
		inline void setLastEntry(Long64_t ent) { lastEntry = ent; }                 
		Long64_t GetEntries() { return nentries; }                                  
		Int_t Fill() { return outTree->Fill(); }                                    
                                                                                
		// members                                                                  
		TTree *outTree;                                                             
		BranchDef *branchDefClass;                                                  
		TString name;                                                               
		int itype;                                                                  
		int sqrts;                                                                  
		Long64_t nentries;                                                          
		Long64_t nbytes;                                                            
		Long64_t firstEntry;                                                        
		Long64_t lastEntry;                                                         
		std::vector<TreeContainer> treeContainers;                                  
                                                                                
  	// branch variables
    Int_t           *B_s0_BKGCAT;                           
    Double_t        *B_s0_CosTheta1;                        
    Double_t        *B_s0_CosTheta2;                        
    Double_t        *B_s0_DIRA_OWNPV;                       
    Double_t        *B_s0_ENDVERTEX_CHI2;                   
    Int_t           *B_s0_ENDVERTEX_NDOF;                   
    Double_t        *B_s0_ETA;                              
    Double_t        *B_s0_FDCHI2_OWNPV;                     
    Double_t        *B_s0_FD_OWNPV;                         
    Bool_t          *B_s0_Hlt1DiHadronDecision_TOS;         
    Bool_t          *B_s0_Hlt1SingleHadronDecision_TOS;     
    Bool_t          *B_s0_Hlt1TrackAllL0Decision_TOS;       
    Bool_t          *B_s0_Hlt2B2HHDecision_TOS;             
    Bool_t          *B_s0_Hlt2Topo2BodyBBDTDecision_TOS;    
    Bool_t          *B_s0_Hlt2Topo2BodySimpleDecision_TOS;  
    Bool_t          *B_s0_Hlt2Topo3BodyBBDTDecision_TOS;    
    Bool_t          *B_s0_Hlt2Topo3BodySimpleDecision_TOS;  
    Bool_t          *B_s0_Hlt2Topo4BodyBBDTDecision_TOS;    
    Bool_t          *B_s0_Hlt2Topo4BodySimpleDecision_TOS;  
    Bool_t          *B_s0_Hlt2TopoMu4BodyBBDTDecision_TOS;  
    Bool_t          *B_s0_Hlt2TopoOSTF4BodyDecision_TOS;    
    Double_t        *B_s0_IPCHI2_OWNPV;                     
    Double_t        *B_s0_IP_OWNPV;                         
    Bool_t          *B_s0_L0Global_TIS;                     
    Bool_t          *B_s0_L0HadronDecision_TOS;             
    Double_t        *B_s0_M;                                
    Int_t           *B_s0_MC_GD_GD_MOTHER_ID;               
    Int_t           *B_s0_MC_GD_GD_MOTHER_KEY;              
    Int_t           *B_s0_MC_GD_MOTHER_ID;                  
    Int_t           *B_s0_MC_GD_MOTHER_KEY;                 
    Int_t           *B_s0_MC_MOTHER_ID;                     
    Int_t           *B_s0_MC_MOTHER_KEY;                    
    Double_t        *B_s0_MM;                               
    Double_t        *B_s0_MMERR;                            
    Double_t        *B_s0_MMERRoMM;                         
    Double_t        *B_s0_OWNPV_CHI2;                       
    Double_t        *B_s0_P;                                
    Double_t        *B_s0_PE;                               
    Double_t        *B_s0_PT;                               
    Double_t        *B_s0_PX;                               
    Double_t        *B_s0_PY;                               
    Double_t        *B_s0_PZ;                               
    Double_t        *B_s0_Phi;                              
    Double_t        *B_s0_Phi1;                             
    Int_t           *B_s0_TAGCAT;                           
    Int_t           *B_s0_TAGCAT_OS;                        
    Int_t           *B_s0_TAGDECISION;                      
    Int_t           *B_s0_TAGDECISION_OS;                   
    Int_t           *B_s0_TAGGER;                           
    Double_t        *B_s0_TAGOMEGA;                         
    Double_t        *B_s0_TAGOMEGA_OS;                      
    Double_t        *B_s0_TAU;                              
    Double_t        *B_s0_TAUCHI2;                          
    Double_t        *B_s0_TAUERR;                           
    Double_t        *Kminus_ETA;                            
    Double_t        *Kminus_IPCHI2_OWNPV;                   
    Double_t        *Kminus_IP_OWNPV;                       
    Double_t        *Kminus_M;                              
    Double_t        *Kminus_ORIVX_CHI2;                     
    Int_t           *Kminus_ORIVX_NDOF;                     
    Double_t        *Kminus_P;                              
    Double_t        *Kminus_PE;                             
    Double_t        *Kminus_PIDK;                           
    Double_t        *Kminus_PIDKcorr;                       
    Double_t        *Kminus_PIDe;                           
    Double_t        *Kminus_PIDmu;                          
    Double_t        *Kminus_PIDp;                           
    Double_t        *Kminus_PIDpcorr;                       
    Double_t        *Kminus_PT;                             
    Double_t        *Kminus_PX;                             
    Double_t        *Kminus_PY;                             
    Double_t        *Kminus_PZ;                             
    Double_t        *Kminus_ProbNNk;                        
    Double_t        *Kminus_ProbNNkcorr;                    
    Double_t        *Kminus_ProbNNp;                        
    Double_t        *Kminus_ProbNNpi;                       
    Double_t        *Kminus_ProbNNpiKp;                     
    Double_t        *Kminus_ProbNNpicorr;                   
    Double_t        *Kminus_TRACK_CHI2NDOF;                 
    Bool_t          *Kminus_isMuon;                         
    Double_t        *Kplus_ETA;                             
    Double_t        *Kplus_IPCHI2_OWNPV;                    
    Double_t        *Kplus_IP_OWNPV;                        
    Double_t        *Kplus_M;                               
    Double_t        *Kplus_ORIVX_CHI2;                      
    Int_t           *Kplus_ORIVX_NDOF;                      
    Double_t        *Kplus_P;                               
    Double_t        *Kplus_PE;                              
    Double_t        *Kplus_PIDK;                            
    Double_t        *Kplus_PIDKcorr;                        
    Double_t        *Kplus_PIDe;                            
    Double_t        *Kplus_PIDmu;                           
    Double_t        *Kplus_PIDp;                            
    Double_t        *Kplus_PIDpcorr;                        
    Double_t        *Kplus_PT;                              
    Double_t        *Kplus_PX;                              
    Double_t        *Kplus_PY;                              
    Double_t        *Kplus_PZ;                              
    Double_t        *Kplus_ProbNNk;                         
    Double_t        *Kplus_ProbNNkcorr;                     
    Double_t        *Kplus_ProbNNp;                         
    Double_t        *Kplus_ProbNNpi;                        
    Double_t        *Kplus_ProbNNpiKp;                      
    Double_t        *Kplus_ProbNNpicorr;                    
    Double_t        *Kplus_TRACK_CHI2NDOF;                  
    Bool_t          *Kplus_isMuon;                          
    Double_t        *Kst_CosTheta;                          
    Double_t        *Kst_DIRA_ORIVX;                        
    Double_t        *Kst_DIRA_OWNPV;                        
    Double_t        *Kst_ENDVERTEX_CHI2;                    
    Int_t           *Kst_ENDVERTEX_NDOF;                    
    Double_t        *Kst_ETA;                               
    Double_t        *Kst_FDCHI2_ORIVX;                      
    Double_t        *Kst_FDCHI2_OWNPV;                      
    Double_t        *Kst_FD_ORIVX;                          
    Double_t        *Kst_FD_OWNPV;                          
    Double_t        *Kst_IPCHI2_OWNPV;                      
    Double_t        *Kst_IP_OWNPV;                          
    Double_t        *Kst_M;                                 
    Double_t        *Kst_MM;                                
    Double_t        *Kst_MMERR;                             
    Double_t        *Kst_P;                                 
    Double_t        *Kst_PE;                                
    Double_t        *Kst_PT;                                
    Double_t        *Kst_PX;                                
    Double_t        *Kst_PY;                                
    Double_t        *Kst_PZ;                                
    Double_t        *Kstb_CosTheta;                         
    Double_t        *Kstb_DIRA_ORIVX;                       
    Double_t        *Kstb_DIRA_OWNPV;                       
    Double_t        *Kstb_ENDVERTEX_CHI2;                   
    Int_t           *Kstb_ENDVERTEX_NDOF;                   
    Double_t        *Kstb_ETA;                              
    Double_t        *Kstb_FDCHI2_ORIVX;                     
    Double_t        *Kstb_FDCHI2_OWNPV;                     
    Double_t        *Kstb_FD_ORIVX;                         
    Double_t        *Kstb_FD_OWNPV;                         
    Double_t        *Kstb_IPCHI2_OWNPV;                     
    Double_t        *Kstb_IP_OWNPV;                         
    Double_t        *Kstb_M;                                
    Double_t        *Kstb_MM;                               
    Double_t        *Kstb_MMERR;                            
    Double_t        *Kstb_P;                                
    Double_t        *Kstb_PE;                               
    Double_t        *Kstb_PT;                               
    Double_t        *Kstb_PX;                               
    Double_t        *Kstb_PY;                               
    Double_t        *Kstb_PZ;                               
    Double_t        *M_KKPiMinus;                           
    Double_t        *M_KKPiPlus;                            
    Float_t         *PVCHI2;                                
    Float_t         *PVNDOF;                                
    Float_t         *PVNTRACKS;                             
    Float_t         *PVX;                                   
    Float_t         *PVXERR;                                
    Float_t         *PVY;                                   
    Float_t         *PVYERR;                                
    Float_t         *PVZ;                                   
    Float_t         *PVZERR;                                
    Double_t        *Piminus_ETA;                           
    Double_t        *Piminus_IPCHI2_OWNPV;                  
    Double_t        *Piminus_IP_OWNPV;                      
    Double_t        *Piminus_M;                             
    Double_t        *Piminus_ORIVX_CHI2;                    
    Int_t           *Piminus_ORIVX_NDOF;                    
    Double_t        *Piminus_P;                             
    Double_t        *Piminus_PE;                            
    Double_t        *Piminus_PIDK;                          
    Double_t        *Piminus_PIDKcorr;                      
    Double_t        *Piminus_PIDe;                          
    Double_t        *Piminus_PIDmu;                         
    Double_t        *Piminus_PIDp;                          
    Double_t        *Piminus_PIDpcorr;                      
    Double_t        *Piminus_PT;                            
    Double_t        *Piminus_PX;                            
    Double_t        *Piminus_PY;                            
    Double_t        *Piminus_PZ;                            
    Double_t        *Piminus_ProbNNk;                       
    Double_t        *Piminus_ProbNNkcorr;                   
    Double_t        *Piminus_ProbNNp;                       
    Double_t        *Piminus_ProbNNpi;                      
    Double_t        *Piminus_ProbNNpiKp;                    
    Double_t        *Piminus_ProbNNpicorr;                  
    Double_t        *Piminus_TRACK_CHI2NDOF;                
    Bool_t          *Piminus_isMuon;                        
    Double_t        *Piplus_ETA;                            
    Double_t        *Piplus_IPCHI2_OWNPV;                   
    Double_t        *Piplus_IP_OWNPV;                       
    Double_t        *Piplus_M;                              
    Double_t        *Piplus_ORIVX_CHI2;                     
    Int_t           *Piplus_ORIVX_NDOF;                     
    Double_t        *Piplus_P;                              
    Double_t        *Piplus_PE;                             
    Double_t        *Piplus_PIDK;                           
    Double_t        *Piplus_PIDKcorr;                       
    Double_t        *Piplus_PIDe;                           
    Double_t        *Piplus_PIDmu;                          
    Double_t        *Piplus_PIDp;                           
    Double_t        *Piplus_PIDpcorr;                       
    Double_t        *Piplus_PT;                             
    Double_t        *Piplus_PX;                             
    Double_t        *Piplus_PY;                             
    Double_t        *Piplus_PZ;                             
    Double_t        *Piplus_ProbNNk;                        
    Double_t        *Piplus_ProbNNkcorr;                    
    Double_t        *Piplus_ProbNNp;                        
    Double_t        *Piplus_ProbNNpi;                       
    Double_t        *Piplus_ProbNNpiKp;                     
    Double_t        *Piplus_ProbNNpicorr;                   
    Double_t        *Piplus_TRACK_CHI2NDOF;                 
    Bool_t          *Piplus_isMuon;                         
    Short_t         *Polarity;                              
    Float_t         *bdtoutput;                             
    Bool_t          *cut_based_pid;                         
    ULong64_t       *eventNumber;                           
    Double_t        *max_kaon_PIDK;                         
    Double_t        *max_kaon_ProbNNk;                      
    Double_t        *max_kaon_ProbNNp;                      
    Double_t        *max_kaon_ProbNNpi;                     
    Double_t        *max_kaon_ProbNNpiKp;                   
    Double_t        *max_pion_PIDK;                         
    Double_t        *max_pion_ProbNNk;                      
    Double_t        *max_pion_ProbNNp;                      
    Double_t        *max_pion_ProbNNpi;                     
    Double_t        *max_pion_ProbNNpiKp;                   
    Double_t        *max_track_chi2;                        
    Double_t        *min_kaon_PIDK;                         
    Double_t        *min_kaon_ProbNNk;                      
    Double_t        *min_kaon_ProbNNp;                      
    Double_t        *min_kaon_ProbNNpi;                     
    Double_t        *min_kaon_ProbNNpiKp;                   
    Double_t        *min_pion_PIDK;                         
    Double_t        *min_pion_ProbNNk;                      
    Double_t        *min_pion_ProbNNp;                      
    Double_t        *min_pion_ProbNNpi;                     
    Double_t        *min_pion_ProbNNpiKp;                   
    Int_t           *nBackTracks;                           
    UInt_t          *nCandidate;                            
    Int_t           *nDownstreamTracks;                     
    Int_t           *nITClusters;                           
    Int_t           *nLongTracks;                           
    Int_t           *nMuonCoordsS0;                         
    Int_t           *nMuonCoordsS1;                         
    Int_t           *nMuonCoordsS2;                         
    Int_t           *nMuonCoordsS3;                         
    Int_t           *nMuonCoordsS4;                         
    Int_t           *nMuonTracks;                           
    Int_t           *nOTClusters;                           
    Int_t           *nPV;                                   
    Int_t           *nPVs;                                  
    Int_t           *nRich1Hits;                            
    Int_t           *nRich2Hits;                            
    Int_t           *nSPDHits;                              
    Int_t           *nTTClusters;                           
    Int_t           *nTTracks;                              
    Int_t           *nTracks;                               
    Int_t           *nUpstreamTracks;                       
    Int_t           *nVeloClusters;                         
    Int_t           *nVeloTracks;                           
    Bool_t          *pass_bdt;                              
    Bool_t          *pass_pid;                              
    UInt_t          *runNumber;                             
    ULong64_t       *totCandidates;                         
    Float_t         *weight;                                

 	// branch definitions
    TBranch *b_B_s0_BKGCAT;                            
    TBranch *b_B_s0_CosTheta1;                         
    TBranch *b_B_s0_CosTheta2;                         
    TBranch *b_B_s0_DIRA_OWNPV;                        
    TBranch *b_B_s0_ENDVERTEX_CHI2;                    
    TBranch *b_B_s0_ENDVERTEX_NDOF;                    
    TBranch *b_B_s0_ETA;                               
    TBranch *b_B_s0_FDCHI2_OWNPV;                      
    TBranch *b_B_s0_FD_OWNPV;                          
    TBranch *b_B_s0_Hlt1DiHadronDecision_TOS;          
    TBranch *b_B_s0_Hlt1SingleHadronDecision_TOS;      
    TBranch *b_B_s0_Hlt1TrackAllL0Decision_TOS;        
    TBranch *b_B_s0_Hlt2B2HHDecision_TOS;              
    TBranch *b_B_s0_Hlt2Topo2BodyBBDTDecision_TOS;     
    TBranch *b_B_s0_Hlt2Topo2BodySimpleDecision_TOS;   
    TBranch *b_B_s0_Hlt2Topo3BodyBBDTDecision_TOS;     
    TBranch *b_B_s0_Hlt2Topo3BodySimpleDecision_TOS;   
    TBranch *b_B_s0_Hlt2Topo4BodyBBDTDecision_TOS;     
    TBranch *b_B_s0_Hlt2Topo4BodySimpleDecision_TOS;   
    TBranch *b_B_s0_Hlt2TopoMu4BodyBBDTDecision_TOS;   
    TBranch *b_B_s0_Hlt2TopoOSTF4BodyDecision_TOS;     
    TBranch *b_B_s0_IPCHI2_OWNPV;                      
    TBranch *b_B_s0_IP_OWNPV;                          
    TBranch *b_B_s0_L0Global_TIS;                      
    TBranch *b_B_s0_L0HadronDecision_TOS;              
    TBranch *b_B_s0_M;                                 
    TBranch *b_B_s0_MC_GD_GD_MOTHER_ID;                
    TBranch *b_B_s0_MC_GD_GD_MOTHER_KEY;               
    TBranch *b_B_s0_MC_GD_MOTHER_ID;                   
    TBranch *b_B_s0_MC_GD_MOTHER_KEY;                  
    TBranch *b_B_s0_MC_MOTHER_ID;                      
    TBranch *b_B_s0_MC_MOTHER_KEY;                     
    TBranch *b_B_s0_MM;                                
    TBranch *b_B_s0_MMERR;                             
    TBranch *b_B_s0_MMERRoMM;                          
    TBranch *b_B_s0_OWNPV_CHI2;                        
    TBranch *b_B_s0_P;                                 
    TBranch *b_B_s0_PE;                                
    TBranch *b_B_s0_PT;                                
    TBranch *b_B_s0_PX;                                
    TBranch *b_B_s0_PY;                                
    TBranch *b_B_s0_PZ;                                
    TBranch *b_B_s0_Phi;                               
    TBranch *b_B_s0_Phi1;                              
    TBranch *b_B_s0_TAGCAT;                            
    TBranch *b_B_s0_TAGCAT_OS;                         
    TBranch *b_B_s0_TAGDECISION;                       
    TBranch *b_B_s0_TAGDECISION_OS;                    
    TBranch *b_B_s0_TAGGER;                            
    TBranch *b_B_s0_TAGOMEGA;                          
    TBranch *b_B_s0_TAGOMEGA_OS;                       
    TBranch *b_B_s0_TAU;                               
    TBranch *b_B_s0_TAUCHI2;                           
    TBranch *b_B_s0_TAUERR;                            
    TBranch *b_Kminus_ETA;                             
    TBranch *b_Kminus_IPCHI2_OWNPV;                    
    TBranch *b_Kminus_IP_OWNPV;                        
    TBranch *b_Kminus_M;                               
    TBranch *b_Kminus_ORIVX_CHI2;                      
    TBranch *b_Kminus_ORIVX_NDOF;                      
    TBranch *b_Kminus_P;                               
    TBranch *b_Kminus_PE;                              
    TBranch *b_Kminus_PIDK;                            
    TBranch *b_Kminus_PIDKcorr;                        
    TBranch *b_Kminus_PIDe;                            
    TBranch *b_Kminus_PIDmu;                           
    TBranch *b_Kminus_PIDp;                            
    TBranch *b_Kminus_PIDpcorr;                        
    TBranch *b_Kminus_PT;                              
    TBranch *b_Kminus_PX;                              
    TBranch *b_Kminus_PY;                              
    TBranch *b_Kminus_PZ;                              
    TBranch *b_Kminus_ProbNNk;                         
    TBranch *b_Kminus_ProbNNkcorr;                     
    TBranch *b_Kminus_ProbNNp;                         
    TBranch *b_Kminus_ProbNNpi;                        
    TBranch *b_Kminus_ProbNNpiKp;                      
    TBranch *b_Kminus_ProbNNpicorr;                    
    TBranch *b_Kminus_TRACK_CHI2NDOF;                  
    TBranch *b_Kminus_isMuon;                          
    TBranch *b_Kplus_ETA;                              
    TBranch *b_Kplus_IPCHI2_OWNPV;                     
    TBranch *b_Kplus_IP_OWNPV;                         
    TBranch *b_Kplus_M;                                
    TBranch *b_Kplus_ORIVX_CHI2;                       
    TBranch *b_Kplus_ORIVX_NDOF;                       
    TBranch *b_Kplus_P;                                
    TBranch *b_Kplus_PE;                               
    TBranch *b_Kplus_PIDK;                             
    TBranch *b_Kplus_PIDKcorr;                         
    TBranch *b_Kplus_PIDe;                             
    TBranch *b_Kplus_PIDmu;                            
    TBranch *b_Kplus_PIDp;                             
    TBranch *b_Kplus_PIDpcorr;                         
    TBranch *b_Kplus_PT;                               
    TBranch *b_Kplus_PX;                               
    TBranch *b_Kplus_PY;                               
    TBranch *b_Kplus_PZ;                               
    TBranch *b_Kplus_ProbNNk;                          
    TBranch *b_Kplus_ProbNNkcorr;                      
    TBranch *b_Kplus_ProbNNp;                          
    TBranch *b_Kplus_ProbNNpi;                         
    TBranch *b_Kplus_ProbNNpiKp;                       
    TBranch *b_Kplus_ProbNNpicorr;                     
    TBranch *b_Kplus_TRACK_CHI2NDOF;                   
    TBranch *b_Kplus_isMuon;                           
    TBranch *b_Kst_CosTheta;                           
    TBranch *b_Kst_DIRA_ORIVX;                         
    TBranch *b_Kst_DIRA_OWNPV;                         
    TBranch *b_Kst_ENDVERTEX_CHI2;                     
    TBranch *b_Kst_ENDVERTEX_NDOF;                     
    TBranch *b_Kst_ETA;                                
    TBranch *b_Kst_FDCHI2_ORIVX;                       
    TBranch *b_Kst_FDCHI2_OWNPV;                       
    TBranch *b_Kst_FD_ORIVX;                           
    TBranch *b_Kst_FD_OWNPV;                           
    TBranch *b_Kst_IPCHI2_OWNPV;                       
    TBranch *b_Kst_IP_OWNPV;                           
    TBranch *b_Kst_M;                                  
    TBranch *b_Kst_MM;                                 
    TBranch *b_Kst_MMERR;                              
    TBranch *b_Kst_P;                                  
    TBranch *b_Kst_PE;                                 
    TBranch *b_Kst_PT;                                 
    TBranch *b_Kst_PX;                                 
    TBranch *b_Kst_PY;                                 
    TBranch *b_Kst_PZ;                                 
    TBranch *b_Kstb_CosTheta;                          
    TBranch *b_Kstb_DIRA_ORIVX;                        
    TBranch *b_Kstb_DIRA_OWNPV;                        
    TBranch *b_Kstb_ENDVERTEX_CHI2;                    
    TBranch *b_Kstb_ENDVERTEX_NDOF;                    
    TBranch *b_Kstb_ETA;                               
    TBranch *b_Kstb_FDCHI2_ORIVX;                      
    TBranch *b_Kstb_FDCHI2_OWNPV;                      
    TBranch *b_Kstb_FD_ORIVX;                          
    TBranch *b_Kstb_FD_OWNPV;                          
    TBranch *b_Kstb_IPCHI2_OWNPV;                      
    TBranch *b_Kstb_IP_OWNPV;                          
    TBranch *b_Kstb_M;                                 
    TBranch *b_Kstb_MM;                                
    TBranch *b_Kstb_MMERR;                             
    TBranch *b_Kstb_P;                                 
    TBranch *b_Kstb_PE;                                
    TBranch *b_Kstb_PT;                                
    TBranch *b_Kstb_PX;                                
    TBranch *b_Kstb_PY;                                
    TBranch *b_Kstb_PZ;                                
    TBranch *b_M_KKPiMinus;                            
    TBranch *b_M_KKPiPlus;                             
    TBranch *b_PVCHI2;                                 
    TBranch *b_PVNDOF;                                 
    TBranch *b_PVNTRACKS;                              
    TBranch *b_PVX;                                    
    TBranch *b_PVXERR;                                 
    TBranch *b_PVY;                                    
    TBranch *b_PVYERR;                                 
    TBranch *b_PVZ;                                    
    TBranch *b_PVZERR;                                 
    TBranch *b_Piminus_ETA;                            
    TBranch *b_Piminus_IPCHI2_OWNPV;                   
    TBranch *b_Piminus_IP_OWNPV;                       
    TBranch *b_Piminus_M;                              
    TBranch *b_Piminus_ORIVX_CHI2;                     
    TBranch *b_Piminus_ORIVX_NDOF;                     
    TBranch *b_Piminus_P;                              
    TBranch *b_Piminus_PE;                             
    TBranch *b_Piminus_PIDK;                           
    TBranch *b_Piminus_PIDKcorr;                       
    TBranch *b_Piminus_PIDe;                           
    TBranch *b_Piminus_PIDmu;                          
    TBranch *b_Piminus_PIDp;                           
    TBranch *b_Piminus_PIDpcorr;                       
    TBranch *b_Piminus_PT;                             
    TBranch *b_Piminus_PX;                             
    TBranch *b_Piminus_PY;                             
    TBranch *b_Piminus_PZ;                             
    TBranch *b_Piminus_ProbNNk;                        
    TBranch *b_Piminus_ProbNNkcorr;                    
    TBranch *b_Piminus_ProbNNp;                        
    TBranch *b_Piminus_ProbNNpi;                       
    TBranch *b_Piminus_ProbNNpiKp;                     
    TBranch *b_Piminus_ProbNNpicorr;                   
    TBranch *b_Piminus_TRACK_CHI2NDOF;                 
    TBranch *b_Piminus_isMuon;                         
    TBranch *b_Piplus_ETA;                             
    TBranch *b_Piplus_IPCHI2_OWNPV;                    
    TBranch *b_Piplus_IP_OWNPV;                        
    TBranch *b_Piplus_M;                               
    TBranch *b_Piplus_ORIVX_CHI2;                      
    TBranch *b_Piplus_ORIVX_NDOF;                      
    TBranch *b_Piplus_P;                               
    TBranch *b_Piplus_PE;                              
    TBranch *b_Piplus_PIDK;                            
    TBranch *b_Piplus_PIDKcorr;                        
    TBranch *b_Piplus_PIDe;                            
    TBranch *b_Piplus_PIDmu;                           
    TBranch *b_Piplus_PIDp;                            
    TBranch *b_Piplus_PIDpcorr;                        
    TBranch *b_Piplus_PT;                              
    TBranch *b_Piplus_PX;                              
    TBranch *b_Piplus_PY;                              
    TBranch *b_Piplus_PZ;                              
    TBranch *b_Piplus_ProbNNk;                         
    TBranch *b_Piplus_ProbNNkcorr;                     
    TBranch *b_Piplus_ProbNNp;                         
    TBranch *b_Piplus_ProbNNpi;                        
    TBranch *b_Piplus_ProbNNpiKp;                      
    TBranch *b_Piplus_ProbNNpicorr;                    
    TBranch *b_Piplus_TRACK_CHI2NDOF;                  
    TBranch *b_Piplus_isMuon;                          
    TBranch *b_Polarity;                               
    TBranch *b_bdtoutput;                              
    TBranch *b_cut_based_pid;                          
    TBranch *b_eventNumber;                            
    TBranch *b_max_kaon_PIDK;                          
    TBranch *b_max_kaon_ProbNNk;                       
    TBranch *b_max_kaon_ProbNNp;                       
    TBranch *b_max_kaon_ProbNNpi;                      
    TBranch *b_max_kaon_ProbNNpiKp;                    
    TBranch *b_max_pion_PIDK;                          
    TBranch *b_max_pion_ProbNNk;                       
    TBranch *b_max_pion_ProbNNp;                       
    TBranch *b_max_pion_ProbNNpi;                      
    TBranch *b_max_pion_ProbNNpiKp;                    
    TBranch *b_max_track_chi2;                         
    TBranch *b_min_kaon_PIDK;                          
    TBranch *b_min_kaon_ProbNNk;                       
    TBranch *b_min_kaon_ProbNNp;                       
    TBranch *b_min_kaon_ProbNNpi;                      
    TBranch *b_min_kaon_ProbNNpiKp;                    
    TBranch *b_min_pion_PIDK;                          
    TBranch *b_min_pion_ProbNNk;                       
    TBranch *b_min_pion_ProbNNp;                       
    TBranch *b_min_pion_ProbNNpi;                      
    TBranch *b_min_pion_ProbNNpiKp;                    
    TBranch *b_nBackTracks;                            
    TBranch *b_nCandidate;                             
    TBranch *b_nDownstreamTracks;                      
    TBranch *b_nITClusters;                            
    TBranch *b_nLongTracks;                            
    TBranch *b_nMuonCoordsS0;                          
    TBranch *b_nMuonCoordsS1;                          
    TBranch *b_nMuonCoordsS2;                          
    TBranch *b_nMuonCoordsS3;                          
    TBranch *b_nMuonCoordsS4;                          
    TBranch *b_nMuonTracks;                            
    TBranch *b_nOTClusters;                            
    TBranch *b_nPV;                                    
    TBranch *b_nPVs;                                   
    TBranch *b_nRich1Hits;                             
    TBranch *b_nRich2Hits;                             
    TBranch *b_nSPDHits;                               
    TBranch *b_nTTClusters;                            
    TBranch *b_nTTracks;                               
    TBranch *b_nTracks;                                
    TBranch *b_nUpstreamTracks;                        
    TBranch *b_nVeloClusters;                          
    TBranch *b_nVeloTracks;                            
    TBranch *b_pass_bdt;                               
    TBranch *b_pass_pid;                               
    TBranch *b_runNumber;                              
    TBranch *b_totCandidates;                          
    TBranch *b_weight;                                 

};

#endif
